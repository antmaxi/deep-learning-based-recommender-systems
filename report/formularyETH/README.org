* FormularyETH
	This is my LaTeX template for writing formularies
** Creating a new formulary
1. mkdir formularyFolder
2. git init
3. git submodule add git@gitlab.ethz.ch:others/formularyETH.git
4. chmod 0700 formularyETH/makeFormulary.sh
5. formularyETH/makeFormulary.sh [-pr -p -m -c] <Optional Name>
Note: option -pr creates a .projectile emacs project file
Note: option -p adds python formulary as submodule
Note: option -m adds math formulary as submodule
Note: option -c adds cpp formulary as submodule

** Requirements
 When writing a new e.g. myformulary.tex, myformulary.tex should be on the same level
 as the folder formularyETH.  
 Within myformulary.tex you always need to define the document class formularyETH
#+BEGIN_SRC latex
\documentclass[fourColumns]{formularyETH/formularyETH}
#+END_SRC
 Further packages that are highly recommended to be included are:
#+BEGIN_SRC latex
\usepackage{formularyETH/formularyETH_GeneralPackages}
\usepackage{formularyETH/formularyETH_underline}
\usepackage{formularyETH/extern/formularyETH_scientific}
\usepackage{formularyETH/extern/formularyETH_tikz}
\usepackage{formularyETH/extern/formularyETH_algorithms}
\tcbuselibrary{minted}
\usepackage{formularyMacros}
#+END_SRC
 Your own Macros should be included into formularyMacros
** Usage
*** File Structure
- forumulary/
- formularyETH/
- myformulary.tex
- src/
    - mych1.tex
    - mych2.tex
- figures/
*** Boxes
		The idea of the formulary is to stack boxes of different kinds together e.g.
#+BEGIN_SRC latex
\begin{mybox}
  \begin{theorem}
	  ...
	\end{theorem}
	\begin{defn}
	  ...
	\end{defn}
\end{mybox}
\begin{anotherBox}[Optional Tilte]  % Not for all boxes
   ...   
\end{anotherbox}  
#+END_SRC
	The main box is usually the sectionbox.   
    Inside the boxes usually theorems (theorem), definitions (defn), lemmas (lemma), proof (proof)
	are used.
** Copyright
		Copyright (c) 2017 [Georg R. Pollak]  

		Permission is hereby granted, free of charge, to any person obtaining a copy
		of this software and associated documentation files (the "Software"), to deal
		in the Software without restriction, including without limitation the rights
		to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		copies of the Software, and to permit persons to whom the Software is
		furnished to do so, subject to the following conditions:

		The above copyright notice, the creator of the formuary package G.R. Pollak
		and this permission notice shall be included in all copies or substantial portions of the Software.
* Sidenote: SSH Keygen
#+BEGIN_SRC bash
cd ~/.ssh
# Create new key (will promt for filename)
ssh-keygen -t rsa -C "your_email@example.com"
# Print key
cat ~/.ssh/id_rsa.pub
# Copy key to remote server if necessary (into .ssh/authorized_keys)
ssh-copy-id -i ~/.ssh/private_key username@host
#+END_SRC
Afterwards just past public key into SSH Keys under profile preferences.